<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="9" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-18T03:02:37 IST" name="Suite" finished-at="2023-04-18T03:04:02 IST" duration-ms="84800">
    <groups>
    </groups>
    <test started-at="2023-04-18T03:02:37 IST" name="Test" finished-at="2023-04-18T03:04:02 IST" duration-ms="84800">
      <class name="com.mohs10.Report.PDFReportTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.mohs10.Report.PDFReportTest@34bde49d]" started-at="2023-04-18T03:03:36 IST" name="beforeClass" finished-at="2023-04-18T03:03:37 IST" duration-ms="1153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="PDFreports()[pri:0, instance:com.mohs10.Report.PDFReportTest@34bde49d]" started-at="2023-04-18T03:03:37 IST" name="PDFreports" finished-at="2023-04-18T03:03:50 IST" duration-ms="12782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PDFreports -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:com.mohs10.Report.PDFReportTest@34bde49d]" started-at="2023-04-18T03:03:37 IST" name="methodName" finished-at="2023-04-18T03:03:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mohs10.Report.PDFReportTest.PDFreports() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.mohs10.Report.PDFReportTest@34bde49d]" started-at="2023-04-18T03:03:50 IST" name="afterClass" finished-at="2023-04-18T03:03:50 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.mohs10.Report.PDFReportTest -->
      <class name="dashboard_db.TablesTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:dashboard_db.TablesTest@1b1cfb87]" started-at="2023-04-18T03:03:50 IST" name="beforeClass" finished-at="2023-04-18T03:03:51 IST" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:dashboard_db.TablesTest@1b1cfb87]" started-at="2023-04-18T03:03:51 IST" name="methodName" finished-at="2023-04-18T03:03:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void dashboard_db.TablesTest.Tables() throws java.io.IOException,java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method signature="Tables()[pri:0, instance:dashboard_db.TablesTest@1b1cfb87]" started-at="2023-04-18T03:03:51 IST" name="Tables" finished-at="2023-04-18T03:04:02 IST" duration-ms="11133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Tables -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:dashboard_db.TablesTest@1b1cfb87]" started-at="2023-04-18T03:04:02 IST" name="afterClass" finished-at="2023-04-18T03:04:02 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- dashboard_db.TablesTest -->
      <class name="com.mohs10.scripts.ABG_Demo">
        <test-method is-config="true" signature="generateReport()[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:02:37 IST" name="generateReport" finished-at="2023-04-18T03:02:38 IST" duration-ms="429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:02:38 IST" name="beforeClass" finished-at="2023-04-18T03:02:41 IST" duration-ms="3310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:02:41 IST" name="methodName" finished-at="2023-04-18T03:02:41 IST" duration-ms="15" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mohs10.scripts.ABG_Demo.RegisterPageTestCase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method signature="RegisterPageTestCase()[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:02:41 IST" name="RegisterPageTestCase" finished-at="2023-04-18T03:02:53 IST" duration-ms="12194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterPageTestCase -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:02:53 IST" name="methodName" finished-at="2023-04-18T03:02:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mohs10.scripts.ABG_Demo.OrderProduct() throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method signature="OrderProduct()[pri:1, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:02:53 IST" name="OrderProduct" finished-at="2023-04-18T03:03:09 IST" duration-ms="16055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderProduct -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:03:09 IST" name="methodName" finished-at="2023-04-18T03:03:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mohs10.scripts.ABG_Demo.InvalidUsername() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method signature="InvalidUsername()[pri:2, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:03:09 IST" name="InvalidUsername" finished-at="2023-04-18T03:03:17 IST" duration-ms="7200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidUsername -->
        <test-method signature="BothInvalidCreds()[pri:3, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:03:17 IST" name="BothInvalidCreds" finished-at="2023-04-18T03:03:24 IST" duration-ms="7016" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BothInvalidCreds -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:03:17 IST" name="methodName" finished-at="2023-04-18T03:03:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mohs10.scripts.ABG_Demo.BothInvalidCreds() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method is-config="true" signature="methodName(java.lang.reflect.Method)[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:03:24 IST" name="methodName" finished-at="2023-04-18T03:03:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mohs10.scripts.ABG_Demo.FailedTestCase() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodName -->
        <test-method signature="FailedTestCase()[pri:4, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:03:24 IST" name="FailedTestCase" finished-at="2023-04-18T03:03:35 IST" duration-ms="11190" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='About ']"}
  (Session info: chrome=112.0.5615.87)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-AM6U94K', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.87, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:52688}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 39e5f9ae20e6313754c093b814cfe7ec
*** Element info: {Using=xpath, value=//a[normalize-space()='About ']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='About ']"}
  (Session info: chrome=112.0.5615.87)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-AM6U94K', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.87, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\Dell\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:52688}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 39e5f9ae20e6313754c093b814cfe7ec
*** Element info: {Using=xpath, value=//a[normalize-space()='About ']}
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.mohs10.ActionDriver.Action.click(Action.java:57)
at com.mohs10.reuse.CommonFuns.Aboutus(CommonFuns.java:28)
at com.mohs10.scripts.ABG_Demo.FailedTestCase(ABG_Demo.java:62)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FailedTestCase -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.mohs10.scripts.ABG_Demo@97e93f1]" started-at="2023-04-18T03:03:35 IST" name="afterClass" finished-at="2023-04-18T03:03:36 IST" duration-ms="946" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.mohs10.scripts.ABG_Demo -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
